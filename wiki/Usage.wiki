= Running the sample of usage =

In order to try this integration the standard (modified server part) GWT "Hello World" application bundled with Eclipse plugin can be built and run:

1. Checkout http://code.google.com/p/gspring/source/browse/#svn%2Ftrunk%2Fsample

2.
Make sure port 8080 is free

3.
Run from the root of sample code
{{{
mvn clean package jetty:run-war
}}}

4. Open http://localhost:8080/gspring


= Typical Usage in project =

See the sample described above.

===Spring context file===
{{{
<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<mvc:annotation-driven />

	<context:annotation-config />

	<!-- IMPORTANT PART -->
        <import resource="classpath:/gspring-context.xml" />

	<!-- OPTIONAL: can be used by gspring if declared -->
	<bean id="cacheManager" class="org.springframework.cache.concurrent.ConcurrentMapCacheManager" />
	
	<!-- ANY DECLARATIONS -->

</beans>

        

}}}

===web.xml file===
{{{
	<!-- ... -->
	<servlet-mapping>
		<servlet-name>DispatcherServlet</servlet-name>
		<url-pattern>*.gwt</url-pattern>
	</servlet-mapping>
	<!-- ... -->
}}}


===Service interface===
{{{
@RemoteServiceRelativePath("greet/greetingService.gwt")
public interface GreetingService extends RemoteService {
	String greetServer(String name);
}
}}}


===Class implementer===
{{{

@Service("greetingService")
public class GreetingServiceImpl implements GreetingService {
	@Override
	public String greetServer(String name) {
		return MessageFormat.format("Hello, {0}!", name);
	}
}
}}}